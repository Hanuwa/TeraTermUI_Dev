; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Tera Term UI"
#define MyAppVersion 
#define MyAppPublisher "Armando Del Valle Tejada"
#define MyAppURL "github.com/Hanuwa/TeraTermUI"
#define MyAppExeName "TeraTermUI.exe"
#define MyAppPath 

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{CF2350A9-945A-44CD-B538-226F1CEB6FD4}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
ArchitecturesInstallIn64BitMode=x64
AppVerName={#MyAppName}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf64}\TeraTermUI
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile={#MyAppPath}\TeraTermUI_installer\LICENSE.txt
PrivilegesRequired=admin
OutputBaseFilename=TeraTermUI_64-bit_Installer-
Compression=lzma
SolidCompression=yes
WizardStyle=modern
SetupIconFile=tera-term.ico

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[CustomMessages]
english.teraterm=Do you wish to install Tera Term too?
spanish.teraterm=¿Desea instalar Tera Term también?

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "teraterm"; Description: "{cm:teraterm}"; GroupDescription: "Additional installations"; Flags: unchecked

[Files]
Source: "{#MyAppPath}\TeraTermUI_installer\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MyAppPath}\database.db"; DestDir: "{commonappdata}\TeraTermUI"; Flags: onlyifdoesntexist; Permissions: everyone-modify
Source: "{#MyAppPath}\feedback.zip"; DestDir: "{commonappdata}\TeraTermUI"; Flags: onlyifdoesntexist; Permissions: everyone-modify
Source: "{#MyAppPath}\TeraTermUI_installer\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MyAppPath}\teraterm-4.107.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: teraterm
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Dirs]
Name: "{commonappdata}\TeraTermUI"; Permissions: everyone-modify; Flags: uninsneveruninstall

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  if CurStep = ssPostInstall then
  begin
    if WizardIsTaskSelected('teraterm') then
    begin
      // Run the teraterm installer without any prompt
      if not Exec(ExpandConstant('{tmp}\teraterm-4.107.exe'), '/SILENT', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
      begin
        // Handle the error. For example, show a message to the user.
        MsgBox('Tera Term installation failed.', mbError, MB_OK);
      end;
    end;
  end;
end;
